# OCR系统配置

# 环境配置
environment:
  python_version: "3.8"
  tesseract_path: "/usr/local/bin/tesseract"
  screenshots_dir: "/Users/mac/ai/temp/screenshots"
  data_dir: "/Users/mac/cursor/GameTheoryAI/data"
  log_dir: "/Users/mac/cursor/GameTheoryAI/logs"

# 日志级别配置
log_levels:
  DEBUG: 10
  INFO: 20
  WARNING: 30
  ERROR: 40
  CRITICAL: 50
  default: "INFO"
  adb: "INFO" 
  screenshot: "INFO"
  ocr: "DEBUG"

# 目录配置
screenshots_dir: "/Users/mac/ai/temp/screenshots/20250407"  # 截图目录
template_dir: "data/templates"  # 模板目录
debug_dir: "output/debug"  # 调试输出目录
output_dir: "output"  # 输出目录
log_dir: "logs"  # 日志目录

# 日志配置
logging:
  level: INFO
  log_dir: logs

# 系统配置
system:
  debug: true
  max_retries: 3
  retry_delay: 1.0

# ADB配置
adb:
  path: "adb"  # ADB工具路径
  screenshot:
    remote_path: "/sdcard/screenshot_{timestamp}.png"  # 设备端截图路径
    local_dir: "screenshots"  # 本地保存目录
    filename_format: "screenshot_{timestamp}.png"  # 文件名格式

# 图片处理配置
image_extensions:                                         # 支持的图片格式
  - "*.png"
  - "*.jpg"

# 预处理参数
preprocess_params:
  sharpen_kernel: [[-1,-1,-1], [-1,9,-1], [-1,-1,-1]]  # 锐化核
  clahe_clip_limit: 3.0  # CLAHE对比度限制
  clahe_tile_size: 8  # CLAHE瓦片大小
  bilateral_d: 9  # 双边滤波直径
  bilateral_sigma_color: 75  # 双边滤波颜色标准差
  bilateral_sigma_space: 75  # 双边滤波空间标准差
  adaptive_threshold_block_size: 15  # 自适应阈值块大小
  adaptive_threshold_c: 5  # 自适应阈值常数

# 检测参数
detection_params:
  min_area: 50  # 降低最小面积
  max_area: 20000  # 增加最大面积
  min_aspect_ratio: 0.3  # 降低最小宽高比
  max_aspect_ratio: 3.0  # 增加最大宽高比

# OCR参数
ocr_params:
  confidence_threshold: 25  # 降低置信度阈值
  template_match_threshold: 0.6  # 降低模板匹配阈值

# 名称映射
name_map:
  "1": "一"
  "2": "二"
  "3": "三"
  "4": "四"
  "5": "五"
  "6": "六"
  "7": "七"
  "8": "八"
  "9": "九"

# 数字映射
number_map:
  "一": 1
  "二": 2
  "三": 3
  "四": 4
  "五": 5
  "六": 6
  "七": 7
  "八": 8
  "九": 9

def _restart_adb(self) -> bool:
    """重启 ADB 服务"""
    # 停止 ADB 服务器
    self._run_adb_command(["adb", "kill-server"])
    time.sleep(1)
    
    # 启动 ADB 服务器
    self._run_adb_command(["adb", "start-server"])
    time.sleep(2)
    
    # 重新连接设备
    self._run_adb_command(["adb", "connect", "127.0.0.1:7555"])